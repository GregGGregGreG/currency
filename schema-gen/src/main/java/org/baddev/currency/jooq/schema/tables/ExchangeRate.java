/**
 * This class is generated by jOOQ
 */
package org.baddev.currency.jooq.schema.tables;


import org.baddev.currency.jooq.schema.Exchanger;
import org.baddev.currency.jooq.schema.Keys;
import org.baddev.currency.jooq.schema.tables.records.ExchangeRateRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeRate extends TableImpl<ExchangeRateRecord> {

	private static final long serialVersionUID = -1002531429;

	/**
	 * The reference instance of <code>exchanger.exchange_rate</code>
	 */
	public static final ExchangeRate EXCHANGE_RATE = new ExchangeRate();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExchangeRateRecord> getRecordType() {
		return ExchangeRateRecord.class;
	}

	/**
	 * The column <code>exchanger.exchange_rate.id</code>.
	 */
	public final TableField<ExchangeRateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_rate.base_liter_code</code>.
	 */
	public final TableField<ExchangeRateRecord, String> BASE_LITER_CODE = createField("base_liter_code", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>exchanger.exchange_rate.liter_code</code>.
	 */
	public final TableField<ExchangeRateRecord, String> LITER_CODE = createField("liter_code", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>exchanger.exchange_rate.exchange_date</code>.
	 */
	public final TableField<ExchangeRateRecord, Date> EXCHANGE_DATE = createField("exchange_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_rate.rate</code>.
	 */
	public final TableField<ExchangeRateRecord, Double> RATE = createField("rate", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * Create a <code>exchanger.exchange_rate</code> table reference
	 */
	public ExchangeRate() {
		this("exchange_rate", null);
	}

	/**
	 * Create an aliased <code>exchanger.exchange_rate</code> table reference
	 */
	public ExchangeRate(String alias) {
		this(alias, EXCHANGE_RATE);
	}

	private ExchangeRate(String alias, Table<ExchangeRateRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExchangeRate(String alias, Table<ExchangeRateRecord> aliased, Field<?>[] parameters) {
		super(alias, Exchanger.EXCHANGER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<ExchangeRateRecord, Long> getIdentity() {
		return Keys.IDENTITY_EXCHANGE_RATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ExchangeRateRecord> getPrimaryKey() {
		return Keys.KEY_EXCHANGE_RATE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ExchangeRateRecord>> getKeys() {
		return Arrays.<UniqueKey<ExchangeRateRecord>>asList(Keys.KEY_EXCHANGE_RATE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExchangeRate as(String alias) {
		return new ExchangeRate(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExchangeRate rename(String name) {
		return new ExchangeRate(name, null);
	}
}
