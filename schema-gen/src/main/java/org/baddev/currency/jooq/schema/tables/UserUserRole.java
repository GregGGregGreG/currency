/**
 * This class is generated by jOOQ
 */
package org.baddev.currency.jooq.schema.tables;


import org.baddev.currency.jooq.schema.Exchanger;
import org.baddev.currency.jooq.schema.Keys;
import org.baddev.currency.jooq.schema.tables.records.UserUserRoleRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserUserRole extends TableImpl<UserUserRoleRecord> {

    private static final long serialVersionUID = 1736067813;

    /**
     * The reference instance of <code>exchanger.user_user_role</code>
     */
    public static final UserUserRole USER_USER_ROLE = new UserUserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserUserRoleRecord> getRecordType() {
        return UserUserRoleRecord.class;
    }

    /**
     * The column <code>exchanger.user_user_role.user_id</code>.
     */
    public final TableField<UserUserRoleRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>exchanger.user_user_role.role_id</code>.
     */
    public final TableField<UserUserRoleRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>exchanger.user_user_role</code> table reference
     */
    public UserUserRole() {
        this("user_user_role", null);
    }

    /**
     * Create an aliased <code>exchanger.user_user_role</code> table reference
     */
    public UserUserRole(String alias) {
        this(alias, USER_USER_ROLE);
    }

    private UserUserRole(String alias, Table<UserUserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserUserRole(String alias, Table<UserUserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Exchanger.EXCHANGER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserUserRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserUserRoleRecord, ?>>asList(Keys.USER_USER_ROLE_USER_ID_FK, Keys.USER_USER_ROLE_USER_ROLE_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserUserRole as(String alias) {
        return new UserUserRole(alias, this);
    }

    /**
     * Rename this table
     */
    public UserUserRole rename(String name) {
        return new UserUserRole(name, null);
    }
}
