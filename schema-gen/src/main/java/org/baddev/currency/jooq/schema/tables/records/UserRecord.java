/**
 * This class is generated by jOOQ
 */
package org.baddev.currency.jooq.schema.tables.records;


import org.baddev.currency.jooq.schema.tables.User;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<Long, String, String, Boolean, Boolean, Boolean, Boolean> {

    private static final long serialVersionUID = 1943297714;

    /**
     * Setter for <code>exchanger.user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>exchanger.user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>exchanger.user.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>exchanger.user.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>exchanger.user.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>exchanger.user.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>exchanger.user.acc_non_expired</code>.
     */
    public void setAccNonExpired(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>exchanger.user.acc_non_expired</code>.
     */
    public Boolean getAccNonExpired() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>exchanger.user.acc_non_locked</code>.
     */
    public void setAccNonLocked(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>exchanger.user.acc_non_locked</code>.
     */
    public Boolean getAccNonLocked() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>exchanger.user.cred_non_expired</code>.
     */
    public void setCredNonExpired(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>exchanger.user.cred_non_expired</code>.
     */
    public Boolean getCredNonExpired() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>exchanger.user.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>exchanger.user.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, String, String, Boolean, Boolean, Boolean, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return User.USER.USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return User.USER.PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field4() {
        return User.USER.ACC_NON_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return User.USER.ACC_NON_LOCKED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return User.USER.CRED_NON_EXPIRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return User.USER.ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value4() {
        return getAccNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getAccNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getCredNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value2(String value) {
        setUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value3(String value) {
        setPassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value4(Boolean value) {
        setAccNonExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value5(Boolean value) {
        setAccNonLocked(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value6(Boolean value) {
        setCredNonExpired(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord value7(Boolean value) {
        setEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRecord values(Long value1, String value2, String value3, Boolean value4, Boolean value5, Boolean value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String username, String password, Boolean accNonExpired, Boolean accNonLocked, Boolean credNonExpired, Boolean enabled) {
        super(User.USER);

        set(0, id);
        set(1, username);
        set(2, password);
        set(3, accNonExpired);
        set(4, accNonLocked);
        set(5, credNonExpired);
        set(6, enabled);
    }
}
