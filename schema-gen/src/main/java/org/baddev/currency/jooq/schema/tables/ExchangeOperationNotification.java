/**
 * This class is generated by jOOQ
 */
package org.baddev.currency.jooq.schema.tables;


import org.baddev.currency.jooq.schema.Exchanger;
import org.baddev.currency.jooq.schema.tables.records.ExchangeOperationNotificationRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeOperationNotification extends TableImpl<ExchangeOperationNotificationRecord> {

	private static final long serialVersionUID = 1249891809;

	/**
	 * The reference instance of <code>exchanger.exchange_operation_notification</code>
	 */
	public static final ExchangeOperationNotification EXCHANGE_OPERATION_NOTIFICATION = new ExchangeOperationNotification();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExchangeOperationNotificationRecord> getRecordType() {
		return ExchangeOperationNotificationRecord.class;
	}

	/**
	 * The column <code>exchanger.exchange_operation_notification.exchange_opration_id</code>.
	 */
	public final TableField<ExchangeOperationNotificationRecord, Long> EXCHANGE_OPRATION_ID = createField("exchange_opration_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_operation_notification.ui_notification</code>.
	 */
	public final TableField<ExchangeOperationNotificationRecord, Byte> UI_NOTIFICATION = createField("ui_notification", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>exchanger.exchange_operation_notification</code> table reference
	 */
	public ExchangeOperationNotification() {
		this("exchange_operation_notification", null);
	}

	/**
	 * Create an aliased <code>exchanger.exchange_operation_notification</code> table reference
	 */
	public ExchangeOperationNotification(String alias) {
		this(alias, EXCHANGE_OPERATION_NOTIFICATION);
	}

	private ExchangeOperationNotification(String alias, Table<ExchangeOperationNotificationRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExchangeOperationNotification(String alias, Table<ExchangeOperationNotificationRecord> aliased, Field<?>[] parameters) {
		super(alias, Exchanger.EXCHANGER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExchangeOperationNotification as(String alias) {
		return new ExchangeOperationNotification(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExchangeOperationNotification rename(String name) {
		return new ExchangeOperationNotification(name, null);
	}
}
