/**
 * This class is generated by jOOQ
 */
package org.baddev.currency.jooq.schema.tables;


import org.baddev.currency.jooq.schema.Exchanger;
import org.baddev.currency.jooq.schema.tables.records.ExchangeTaskRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.4"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExchangeTask extends TableImpl<ExchangeTaskRecord> {

	private static final long serialVersionUID = -775496575;

	/**
	 * The reference instance of <code>exchanger.exchange_task</code>
	 */
	public static final ExchangeTask EXCHANGE_TASK = new ExchangeTask();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ExchangeTaskRecord> getRecordType() {
		return ExchangeTaskRecord.class;
	}

	/**
	 * The column <code>exchanger.exchange_task.id</code>.
	 */
	public final TableField<ExchangeTaskRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>exchanger.exchange_task.date_added</code>.
	 */
	public final TableField<ExchangeTaskRecord, Date> DATE_ADDED = createField("date_added", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_task.from_ccy</code>.
	 */
	public final TableField<ExchangeTaskRecord, String> FROM_CCY = createField("from_ccy", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_task.to_ccy</code>.
	 */
	public final TableField<ExchangeTaskRecord, String> TO_CCY = createField("to_ccy", org.jooq.impl.SQLDataType.VARCHAR.length(3).nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_task.amount</code>.
	 */
	public final TableField<ExchangeTaskRecord, Double> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_task.cron</code>.
	 */
	public final TableField<ExchangeTaskRecord, String> CRON = createField("cron", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

	/**
	 * The column <code>exchanger.exchange_task.active</code>.
	 */
	public final TableField<ExchangeTaskRecord, Byte> ACTIVE = createField("active", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>exchanger.exchange_task</code> table reference
	 */
	public ExchangeTask() {
		this("exchange_task", null);
	}

	/**
	 * Create an aliased <code>exchanger.exchange_task</code> table reference
	 */
	public ExchangeTask(String alias) {
		this(alias, EXCHANGE_TASK);
	}

	private ExchangeTask(String alias, Table<ExchangeTaskRecord> aliased) {
		this(alias, aliased, null);
	}

	private ExchangeTask(String alias, Table<ExchangeTaskRecord> aliased, Field<?>[] parameters) {
		super(alias, Exchanger.EXCHANGER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExchangeTask as(String alias) {
		return new ExchangeTask(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ExchangeTask rename(String name) {
		return new ExchangeTask(name, null);
	}
}
